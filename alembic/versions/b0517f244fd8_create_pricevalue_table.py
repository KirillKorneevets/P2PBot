"""Create PriceValue table

Revision ID: b0517f244fd8
Revises: 2f635588d26e
Create Date: 2023-11-05 13:31:41.992183

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b0517f244fd8'
down_revision: Union[str, None] = '2f635588d26e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('price_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('max_price', sa.Float(), nullable=True),
    sa.Column('min_price', sa.Float(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'max_price', 'min_price')
    )
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               nullable=False)
    op.create_unique_constraint(None, 'users', ['username'])
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_table('price_value')
    # ### end Alembic commands ###
